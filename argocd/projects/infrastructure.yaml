apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: infrastructure
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: Infrastructure components (storage, databases, operators)
  
  # Git repositories that apps in this project can pull from
  sourceRepos:
    - https://github.com/erikdeirdre/argocd.git
    - https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner/
    - https://percona.github.io/percona-helm-charts/
    - https://charts.jetstack.io  # cert-manager if needed
    - '*'  # Allow all repos (less secure but flexible)
  
  # Where apps can deploy to
  destinations:
    - namespace: 'nfs-provisioner'
      server: https://kubernetes.default.svc
    - namespace: 'percona-operator'
      server: https://kubernetes.default.svc
    - namespace: 'cert-manager'
      server: https://kubernetes.default.svc
    # Or allow all namespaces (less secure):
    # - namespace: '*'
    #   server: https://kubernetes.default.svc
  
  # Cluster-scoped resources apps can create
  clusterResourceWhitelist:
    - group: ''
      kind: Namespace
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRole
    - group: 'rbac.authorization.k8s.io'
      kind: ClusterRoleBinding
    - group: 'apiextensions.k8s.io'
      kind: CustomResourceDefinition
    - group: 'storage.k8s.io'
      kind: StorageClass
    - group: 'admissionregistration.k8s.io'
      kind: ValidatingWebhookConfiguration
    - group: 'admissionregistration.k8s.io'
      kind: MutatingWebhookConfiguration
    - group: 'cert-manager.io'
      kind: ClusterIssuer
    # Or allow all (less secure):
    # - group: '*'
    #   kind: '*'
  
  # Namespace-scoped resources (optional, restricts what can be created)
  namespaceResourceWhitelist:
    - group: ''
      kind: ConfigMap
    - group: ''
      kind: Secret
    - group: ''
      kind: Service
    - group: ''
      kind: ServiceAccount
    - group: ''
      kind: PersistentVolumeClaim
    - group: 'apps'
      kind: Deployment
    - group: 'apps'
      kind: StatefulSet
    - group: 'apps'
      kind: DaemonSet
    - group: 'rbac.authorization.k8s.io'
      kind: Role
    - group: 'rbac.authorization.k8s.io'
      kind: RoleBinding
    - group: 'mysql.oracle.com'
      kind: InnoDBCluster
    - group: 'cert-manager.io'
      kind: Certificate
    - group: 'cert-manager.io'
      kind: Issuer
    # Or allow all in namespace:
    # - group: '*'
    #   kind: '*'
  
  # Deny certain resource types (blacklist approach)
  # namespaceResourceBlacklist:
  #   - group: ''
  #     kind: ResourceQuota
  
  # Roles that can be assumed by apps in this project
  roles:
    - name: infrastructure-admin
      description: Admin access to infrastructure apps
      policies:
        - p, proj:infrastructure:infrastructure-admin, applications, *, infrastructure/*, allow
      groups:
        - infrastructure-team
        - platform-team
    
    - name: infrastructure-readonly
      description: Read-only access to infrastructure apps
      policies:
        - p, proj:infrastructure:infrastructure-readonly, applications, get, infrastructure/*, allow
      groups:
        - developers
  
  # Sync windows - when apps can sync
  # syncWindows:
  #   - kind: allow
  #     schedule: '0 8 * * 1-5'  # Mon-Fri 8 AM
  #     duration: 8h
  #     applications:
  #       - '*'
  
  # Orphaned resources - what to do with resources not in Git
  orphanedResources:
    warn: true
